{"ast":null,"code":"var _jsxFileName = \"/Users/davidbland/Documents/projects/cs-shuffle/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from \"./components/Header/Header\";\nimport Wheel from \"./components/Wheel/Wheel\";\nimport Option from \"./components/Option/Option\";\nimport Results from \"./components/Results/Results\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loggedIn: true,\n      animate: false,\n      spin: false,\n      colorChoice: \"\",\n      winningIcon: \"\",\n      win: false,\n      showMsg: false\n    };\n\n    this.winnerHandler = winningIcon => {\n      this.setState({\n        winningIcon: winningIcon\n      }, () => {});\n      console.log(\"the winning icon is \".concat(winningIcon));\n    };\n\n    this.optionHandler = colorChoice => {\n      this.setState({\n        colorChoice: colorChoice\n      }, () => {\n        console.log(this.state.colorChoice);\n      });\n    };\n\n    this.spinHandler = () => {\n      if (!this.state.spin === true) {\n        this.setState({\n          spin: true\n        });\n        setTimeout(() => {\n          this.state.winningIcon === this.state.colorChoice ? this.setState({\n            win: true,\n            showMsg: true\n          }) : this.setState({\n            win: false,\n            showMsg: true\n          });\n        }, 4000);\n        setTimeout(() => {\n          this.setState({\n            spin: false,\n            showMsg: false\n          });\n        }, 8000);\n      }\n\n      ;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Wheel, {\n      spin: this.state.spin,\n      colorChoice: this.state.colorChoice,\n      winningInfo: this.winnerHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"botWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Option, {\n      click: this.optionHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"spinBtn\",\n      className: \"spin\",\n      onClick: this.spinHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Spin!\")), React.createElement(Results, {\n      win: this.state.win,\n      showMsg: this.state.showMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/davidbland/Documents/projects/cs-shuffle/src/App.js"],"names":["React","Component","Header","Wheel","Option","Results","App","state","loggedIn","animate","spin","colorChoice","winningIcon","win","showMsg","winnerHandler","setState","console","log","optionHandler","spinHandler","setTimeout","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Header from \"./components/Header/Header\"\nimport Wheel from \"./components/Wheel/Wheel\"\nimport Option from \"./components/Option/Option\"\nimport Results from \"./components/Results/Results\"\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    loggedIn: true,\n    animate: false,\n    spin: false,\n    colorChoice: \"\",\n    winningIcon: \"\",\n    win: false,\n    showMsg: false\n  };\n\n  winnerHandler = (winningIcon) => {\n    this.setState({\n      winningIcon: winningIcon\n    }, ()=>{\n      \n    });\n    console.log(`the winning icon is ${winningIcon}`)\n  };\n\n  //Sets the state of the users choice of color\n  optionHandler = (colorChoice) => {\n    this.setState({\n      colorChoice: colorChoice\n    }, ()=>{console.log(this.state.colorChoice)});\n  };\n\n  //handles the spin state to control animation. Checks if animation is in progress to stop the user from pressing the spin button\n  //while the action is in progress\n  spinHandler = () => {\n      if(!this.state.spin === true){\n      this.setState({\n        spin: true\n      });\n      setTimeout(()=>{\n        this.state.winningIcon === this.state.colorChoice ? this.setState({win:true, showMsg: true}) : this.setState({win:false, showMsg: true});\n\n      }, 4000);\n      setTimeout(()=> {\n        this.setState({\n          spin:false,\n          showMsg: false\n        });\n      }, 8000);\n    };\n  };\n\n  render(){\n    return( \n      <div className=\"App\">\n        <Header />\n        <Wheel spin={this.state.spin} colorChoice={this.state.colorChoice} winningInfo={this.winnerHandler}/>\n        <div className=\"botWrapper\">\n          <Option click={this.optionHandler} />\n          <button id=\"spinBtn\" className=\"spin\" onClick={ this.spinHandler } >Spin!</button>\n        </div>\n        <Results win={this.state.win} showMsg={this.state.showMsg}/>\n      </div>\n    )};\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}