{"ast":null,"code":"var _jsxFileName = \"/Users/davidbland/Documents/projects/cs-shuffle/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from \"./components/Header/Header\";\nimport Wheel from \"./components/Wheel/Wheel\";\nimport Option from \"./components/Option/Option\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loggedIn: true,\n      animate: false,\n      spin: false,\n      colorChoice: \"\",\n      winningIcon: \"\",\n      win: false\n    };\n\n    this.winnerHandler = winningIcon => {\n      this.setState({\n        winningIcon: winningIcon\n      }, state => {\n        this.state.winningIcon === this.state.colorChoice ? this.setState({\n          win: true\n        }) : this.setState({\n          win: false\n        });\n      });\n      console.log(\"the winning icon is \".concat(winningIcon));\n    };\n\n    this.optionHandler = colorChoice => {\n      this.setState({\n        colorChoice: colorChoice\n      }, () => {\n        console.log(this.state.colorChoice);\n      });\n    };\n\n    this.spinHandler = () => {\n      if (!this.state.spin === true) {\n        this.setState({\n          spin: true\n        });\n        setTimeout(() => {\n          this.setState({\n            spin: false\n          });\n        }, 8000);\n      }\n\n      ;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Wheel, {\n      spin: this.state.spin,\n      colorChoice: this.state.colorChoice,\n      winningInfo: this.winnerHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"botWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Option, {\n      click: this.optionHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"spinBtn\",\n      className: \"spin\",\n      onClick: this.spinHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Spin!\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.win ? \"You win\" : \"You lose\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/davidbland/Documents/projects/cs-shuffle/src/App.js"],"names":["React","Component","Header","Wheel","Option","App","state","loggedIn","animate","spin","colorChoice","winningIcon","win","winnerHandler","setState","console","log","optionHandler","spinHandler","setTimeout","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,IAAI,EAAE,KAHA;AAINC,MAAAA,WAAW,EAAE,EAJP;AAKNC,MAAAA,WAAW,EAAE,EALP;AAMNC,MAAAA,GAAG,EAAE;AANC,KADkB;;AAAA,SAU1BC,aAV0B,GAUTF,WAAD,IAAiB;AAC/B,WAAKG,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAEA;AADD,OAAd,EAEIL,KAAD,IAAS;AACV,aAAKA,KAAL,CAAWK,WAAX,KAA2B,KAAKL,KAAL,CAAWI,WAAtC,GAAoD,KAAKI,QAAL,CAAc;AAACF,UAAAA,GAAG,EAAC;AAAL,SAAd,CAApD,GAAgF,KAAKE,QAAL,CAAc;AAACF,UAAAA,GAAG,EAAC;AAAL,SAAd,CAAhF;AACD,OAJD;AAKAG,MAAAA,OAAO,CAACC,GAAR,+BAAmCL,WAAnC;AACD,KAjByB;;AAAA,SAoB1BM,aApB0B,GAoBTP,WAAD,IAAiB;AAC/B,WAAKI,QAAL,CAAc;AACZJ,QAAAA,WAAW,EAAEA;AADD,OAAd,EAEG,MAAI;AAACK,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWI,WAAvB;AAAoC,OAF5C;AAGD,KAxByB;;AAAA,SA4B1BQ,WA5B0B,GA4BZ,MAAM;AAChB,UAAG,CAAC,KAAKZ,KAAL,CAAWG,IAAZ,KAAqB,IAAxB,EAA6B;AAC7B,aAAKK,QAAL,CAAc;AACZL,UAAAA,IAAI,EAAE;AADM,SAAd;AAGAU,QAAAA,UAAU,CAAC,MAAK;AACd,eAAKL,QAAL,CAAc;AACZL,YAAAA,IAAI,EAAC;AADO,WAAd;AAGD,SAJS,EAIP,IAJO,CAAV;AAKD;;AAAA;AACF,KAvCyB;AAAA;;AAyC1BW,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWG,IAAxB;AAA8B,MAAA,WAAW,EAAE,KAAKH,KAAL,CAAWI,WAAtD;AAAmE,MAAA,WAAW,EAAE,KAAKG,aAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKI,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAsC,MAAA,OAAO,EAAG,KAAKC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKZ,KAAL,CAAWM,GAAX,GAAiB,SAAjB,GAA6B,UAAnC,CAHF,CAHF,CADF;AAUE;;AApDsB;;AAuD5B,eAAeP,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Header from \"./components/Header/Header\"\nimport Wheel from \"./components/Wheel/Wheel\"\nimport Option from \"./components/Option/Option\"\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    loggedIn: true,\n    animate: false,\n    spin: false,\n    colorChoice: \"\",\n    winningIcon: \"\",\n    win: false\n  };\n\n  winnerHandler = (winningIcon) => {\n    this.setState({\n      winningIcon: winningIcon\n    }, (state)=>{\n      this.state.winningIcon === this.state.colorChoice ? this.setState({win:true}) : this.setState({win:false});\n    });\n    console.log(`the winning icon is ${winningIcon}`)\n  };\n\n  //Sets the state of the users choice of color\n  optionHandler = (colorChoice) => {\n    this.setState({\n      colorChoice: colorChoice\n    }, ()=>{console.log(this.state.colorChoice)});\n  };\n\n  //handles the spin state to control animation. Checks if animation is in progress to stop the user from pressing the spin button\n  //while the action is in progress\n  spinHandler = () => {\n      if(!this.state.spin === true){\n      this.setState({\n        spin: true\n      });\n      setTimeout(()=> {\n        this.setState({\n          spin:false\n        });\n      }, 8000);\n    };\n  };\n\n  render(){\n    return( \n      <div className=\"App\">\n        <Header />\n        <Wheel spin={this.state.spin} colorChoice={this.state.colorChoice} winningInfo={this.winnerHandler}/>\n        <div className=\"botWrapper\">\n          <Option click={this.optionHandler} />\n          <button id=\"spinBtn\" className=\"spin\" onClick={ this.spinHandler } >Spin!</button>\n          <div>{this.state.win ? \"You win\" : \"You lose\"}</div>\n        </div>\n      </div>\n    )};\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}