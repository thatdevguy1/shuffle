{"ast":null,"code":"var _jsxFileName = \"/Users/davidbland/Documents/projects/cs-shuffle/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from \"./components/Header/Header\";\nimport Wheel from \"./components/Wheel/Wheel\";\nimport Option from \"./components/Option/Option\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loggedIn: true,\n      animate: false,\n      spin: false,\n      colorChoice: \"\"\n    };\n\n    this.optionHandler = colorChoice => {\n      this.setState({\n        colorChoice: colorChoice\n      });\n      console.log(this.state.colorChoice);\n    };\n\n    this.spinHandler = () => {\n      if (!this.state.spin === true) {\n        this.setState({\n          spin: true\n        });\n        setTimeout(() => {\n          this.setState({\n            spin: false\n          });\n        }, 8000);\n      }\n\n      ;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Wheel, {\n      spin: this.state.spin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"botWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Option, {\n      click: optionHandler(color).bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"spinBtn\",\n      className: \"spin\",\n      onClick: this.spinHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Spin!\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/davidbland/Documents/projects/cs-shuffle/src/App.js"],"names":["React","Component","Header","Wheel","Option","App","state","loggedIn","animate","spin","colorChoice","optionHandler","setState","console","log","spinHandler","setTimeout","render","color","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,IAAI,EAAE,KAHA;AAINC,MAAAA,WAAW,EAAE;AAJP,KADkB;;AAAA,SAS1BC,aAT0B,GASTD,WAAD,IAAiB;AAC/B,WAAKE,QAAL,CAAc;AACZF,QAAAA,WAAW,EAAEA;AADD,OAAd;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWI,WAAvB;AACD,KAdyB;;AAAA,SAkB1BK,WAlB0B,GAkBZ,MAAM;AAChB,UAAG,CAAC,KAAKT,KAAL,CAAWG,IAAZ,KAAqB,IAAxB,EAA6B;AAC7B,aAAKG,QAAL,CAAc;AACZH,UAAAA,IAAI,EAAE;AADM,SAAd;AAGAO,QAAAA,UAAU,CAAC,MAAK;AACd,eAAKJ,QAAL,CAAc;AACZH,YAAAA,IAAI,EAAC;AADO,WAAd;AAGD,SAJS,EAIP,IAJO,CAAV;AAKD;;AAAA;AACF,KA7ByB;AAAA;;AA+B1BQ,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKX,KAAL,CAAWG,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEE,aAAa,CAACO,KAAD,CAAb,CAAqBC,IAArB,CAA0B,IAA1B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAsC,MAAA,OAAO,EAAG,KAAKJ,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CAHF,CADF;AASE;;AAzCsB;;AA4C5B,eAAeV,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Header from \"./components/Header/Header\"\nimport Wheel from \"./components/Wheel/Wheel\"\nimport Option from \"./components/Option/Option\"\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    loggedIn: true,\n    animate: false,\n    spin: false,\n    colorChoice: \"\"\n  };\n\n  //Sets the state of the users choice of color\n  optionHandler = (colorChoice) => {\n    this.setState({\n      colorChoice: colorChoice\n    });\n    console.log(this.state.colorChoice);\n  };\n\n  //handles the spin state to control animation. Checks if animation is in progress to stop the user from pressing the spin button\n  //while the action is in progress\n  spinHandler = () => {\n      if(!this.state.spin === true){\n      this.setState({\n        spin: true\n      });\n      setTimeout(()=> {\n        this.setState({\n          spin:false\n        }); \n      }, 8000);\n    };\n  };\n\n  render(){\n    return( \n      <div className=\"App\">\n        <Header />\n        <Wheel spin={this.state.spin} />\n        <div className=\"botWrapper\">\n          <Option click={optionHandler(color).bind(this)}/>\n          <button id=\"spinBtn\" className=\"spin\" onClick={ this.spinHandler } >Spin!</button>\n        </div>\n      </div>\n    )};\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}