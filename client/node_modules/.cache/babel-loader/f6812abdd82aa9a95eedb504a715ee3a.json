{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/davidbland/Documents/projects/cs-shuffle/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/davidbland/Documents/projects/cs-shuffle/src/components/Wheel/Wheel.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n            \\n            animation: \", \" 2s linear 3\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n            0% { transform: translate(0); }\\n            100% { transform: translate(500); }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport Icons from \"../User/Icons\";\nimport uuidv from \"uuid/v4\";\nimport styled, { keyframes, css } from 'styled-components';\nimport \"./Wheel.css\";\n\nclass Wheel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      icons: [\"mrGreen\", \"mrPink\", \"mrBlack\"],\n      wheelColors: []\n    };\n\n    this.randomIcons = () => {\n      let tempArray = [];\n\n      for (var i = 0; i < 13; i++) {\n        let random = Math.floor(Math.random() * Math.floor(3));\n        tempArray.push(this.state.icons[random]);\n        console.log(random);\n      }\n\n      this.setState({\n        wheelColors: tempArray\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.randomIcons();\n  }\n\n  render() {\n    var spin = keyframes(_templateObject());\n    var styles = css(_templateObject2(), spin);\n    let iconElements = this.state.wheelColors.map(value => {\n      return React.createElement(Icons, {\n        key: uuidv(),\n        className: \"icon\",\n        userName: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"wheel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, iconElements));\n  }\n\n}\n\n;\nexport default Wheel;","map":{"version":3,"sources":["/Users/davidbland/Documents/projects/cs-shuffle/src/components/Wheel/Wheel.js"],"names":["React","Icons","uuidv","styled","keyframes","css","Wheel","Component","state","icons","wheelColors","randomIcons","tempArray","i","random","Math","floor","push","console","log","setState","componentWillMount","render","spin","styles","iconElements","map","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,EAA4BC,GAA5B,QAAuC,mBAAvC;AACA,OAAO,aAAP;;AAGA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACJC,MAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,QAAZ,EAAsB,SAAtB,CADH;AAEJC,MAAAA,WAAW,EAAE;AAFT,KADuB;;AAAA,SAY/BC,WAZ+B,GAYjB,MAAM;AAChB,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACvB,YAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBC,IAAI,CAACC,KAAL,CAAW,CAAX,CAA3B,CAAb;AACAJ,QAAAA,SAAS,CAACK,IAAV,CAAe,KAAKT,KAAL,CAAWC,KAAX,CAAiBK,MAAjB,CAAf;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACH;;AACD,WAAKM,QAAL,CAAc;AAACV,QAAAA,WAAW,EAAGE;AAAf,OAAd;AACH,KApB8B;AAAA;;AAQ/BS,EAAAA,kBAAkB,GAAE;AAChB,SAAKV,WAAL;AACH;;AAYDW,EAAAA,MAAM,GAAE;AAEJ,QAAIC,IAAI,GAAGnB,SAAH,mBAAR;AAKA,QAAIoB,MAAM,GAAGnB,GAAH,qBAEOkB,IAFP,CAAV;AAMA,QAAIE,YAAY,GAAG,KAAKjB,KAAL,CAAWE,WAAX,CAAuBgB,GAAvB,CAA4BC,KAAD,IAAS;AACnD,aAAO,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEzB,KAAK,EAAjB;AAAqB,QAAA,SAAS,EAAG,MAAjC;AAAwC,QAAA,QAAQ,EAAIyB,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFkB,CAAnB;AAIA,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAEH,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,YADL,CADJ,CADJ;AAOH;;AA9C8B;;AA+ClC;AAED,eAAgBnB,KAAhB","sourcesContent":["import React from \"react\";\nimport Icons from \"../User/Icons\"\nimport uuidv from \"uuid/v4\";\nimport styled, { keyframes, css } from 'styled-components'\nimport \"./Wheel.css\";\n\n\nclass Wheel extends React.Component{\n    state = {\n        icons: [\"mrGreen\", \"mrPink\", \"mrBlack\"],\n        wheelColors: []\n    };\n\n    \n\n    componentWillMount(){\n        this.randomIcons();\n    }\n\n    randomIcons = () => {\n        let tempArray = [];\n        for(var i = 0; i < 13; i++){\n            let random = Math.floor(Math.random() * Math.floor(3));\n            tempArray.push(this.state.icons[random]);\n            console.log(random);\n        }\n        this.setState({wheelColors : tempArray});\n    }\n\n    render(){\n\n        var spin = keyframes`\n            0% { transform: translate(0); }\n            100% { transform: translate(500); }\n    `   ;\n\n        var styles = css`\n            \n            animation: ${spin} 2s linear 3\n        `;\n\n        \n        let iconElements = this.state.wheelColors.map((value)=>{\n            return <Icons key={uuidv()} className = \"icon\" userName = {value} />\n        });\n\n        return(\n            <div className=\"wheel\">\n                <div style={styles}>\n                    {iconElements}\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default (Wheel);"]},"metadata":{},"sourceType":"module"}