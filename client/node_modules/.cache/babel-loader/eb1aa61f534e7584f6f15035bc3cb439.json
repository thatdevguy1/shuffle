{"ast":null,"code":"var _jsxFileName = \"/Users/davidbland/Documents/projects/cs-shuffle/src/components/Wheel/Wheel.js\";\nimport React from \"react\";\nimport Icons from \"../User/Icons\";\nimport uuidv from \"uuid/v4\";\nimport \"./Wheel.css\";\n\nclass Wheel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      icons: [\"mrGreen\", \"mrPink\", \"mrBlack\"],\n      wheelColors: [],\n      winningIcon: 0,\n      winningIconPosition: 0\n    };\n\n    this.randomIcons = () => {\n      let tempArray = [];\n\n      for (var i = 0; i < 13; i++) {\n        let random = Math.floor(Math.random() * Math.floor(3));\n        tempArray.push(this.state.icons[random]);\n        console.log(random);\n      }\n\n      let winningIcon = Math.floor(Math.random() * 14);\n      let winningIconPosition;\n\n      if (winningIcon > 0) {\n        winningIconPosition = 1820 + winningIcon * 56;\n      } else {\n        winningIconPosition = 1820;\n      }\n\n      console.log(winningIcon);\n      this.setState({\n        wheelColors: tempArray,\n        winningIcon: winningIcon,\n        winningIconPosition: winningIconPosition\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.randomIcons();\n  }\n\n  render() {\n    var styles = {\n      transition: '3s ease-in-out',\n      transform: 'translate(-200%)'\n    };\n    var spin = [\"iconWrap\", \"\"];\n    let iconElements = this.state.wheelColors.map(value => {\n      return React.createElement(Icons, {\n        key: uuidv(),\n        className: \"icon\",\n        userName: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"wheel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"selectionBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: spin.join(\" \"),\n      style: this.props.spin ? styles : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, iconElements, iconElements, iconElements));\n  }\n\n}\n\n;\nexport default Wheel;","map":{"version":3,"sources":["/Users/davidbland/Documents/projects/cs-shuffle/src/components/Wheel/Wheel.js"],"names":["React","Icons","uuidv","Wheel","Component","state","icons","wheelColors","winningIcon","winningIconPosition","randomIcons","tempArray","i","random","Math","floor","push","console","log","setState","componentWillMount","render","styles","transition","transform","spin","iconElements","map","value","join","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,aAAP;;AAGA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACJC,MAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,QAAZ,EAAsB,SAAtB,CADH;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,WAAW,EAAE,CAHT;AAIJC,MAAAA,mBAAmB,EAAE;AAJjB,KADuB;;AAAA,SAY/BC,WAZ+B,GAYjB,MAAM;AAChB,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACvB,YAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBC,IAAI,CAACC,KAAL,CAAW,CAAX,CAA3B,CAAb;AACAJ,QAAAA,SAAS,CAACK,IAAV,CAAe,KAAKX,KAAL,CAAWC,KAAX,CAAiBO,MAAjB,CAAf;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACH;;AAED,UAAIL,WAAW,GAAGM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,EAA3B,CAAlB;AACA,UAAIJ,mBAAJ;;AAEA,UAAGD,WAAW,GAAG,CAAjB,EAAmB;AACfC,QAAAA,mBAAmB,GAAG,OAAQD,WAAW,GAAG,EAA5C;AACH,OAFD,MAEK;AACDC,QAAAA,mBAAmB,GAAG,IAAtB;AACH;;AAEDQ,MAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;AAEA,WAAKW,QAAL,CAAc;AACVZ,QAAAA,WAAW,EAAEI,SADH;AAEVH,QAAAA,WAAW,EAAEA,WAFH;AAGVC,QAAAA,mBAAmB,EAAEA;AAHX,OAAd;AAMH,KArC8B;AAAA;;AAQ/BW,EAAAA,kBAAkB,GAAE;AAChB,SAAKV,WAAL;AACH;;AA6BDW,EAAAA,MAAM,GAAE;AACJ,QAAIC,MAAM,GAAG;AACLC,MAAAA,UAAU,EAAE,gBADP;AAELC,MAAAA,SAAS,EAAE;AAFN,KAAb;AAKA,QAAIC,IAAI,GAAG,CAAC,UAAD,EAAa,EAAb,CAAX;AAEA,QAAIC,YAAY,GAAG,KAAKrB,KAAL,CAAWE,WAAX,CAAuBoB,GAAvB,CAA4BC,KAAD,IAAS;AACnD,aAAO,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAE1B,KAAK,EAAjB;AAAqB,QAAA,SAAS,EAAG,MAAjC;AAAwC,QAAA,QAAQ,EAAI0B,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFkB,CAAnB;AAIA,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAEH,IAAI,CAACI,IAAL,CAAU,GAAV,CAAhB;AAAgC,MAAA,KAAK,EAAG,KAAKC,KAAL,CAAWL,IAAZ,GAAoBH,MAApB,GAA6B,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKI,YAFL,EAGKA,YAHL,EAIKA,YAJL,CAFJ,CADJ;AAWH;;AA9D8B;;AA+DlC;AAED,eAAgBvB,KAAhB","sourcesContent":["import React from \"react\";\nimport Icons from \"../User/Icons\"\nimport uuidv from \"uuid/v4\";\nimport \"./Wheel.css\";\n\n\nclass Wheel extends React.Component{\n    state = {\n        icons: [\"mrGreen\", \"mrPink\", \"mrBlack\"],\n        wheelColors: [],\n        winningIcon: 0,\n        winningIconPosition: 0\n    };\n\n    componentWillMount(){\n        this.randomIcons();\n    }\n\n    randomIcons = () => {\n        let tempArray = [];\n        for(var i = 0; i < 13; i++){\n            let random = Math.floor(Math.random() * Math.floor(3));\n            tempArray.push(this.state.icons[random]);\n            console.log(random);\n        }\n\n        let winningIcon = Math.floor(Math.random() * 14);\n        let winningIconPosition;\n\n        if(winningIcon > 0){\n            winningIconPosition = 1820 + (winningIcon * 56);\n        }else{\n            winningIconPosition = 1820;\n        }\n        \n        console.log(winningIcon);\n\n        this.setState({\n            wheelColors: tempArray,\n            winningIcon: winningIcon, \n            winningIconPosition: winningIconPosition\n        });\n\n    }\n\n    render(){\n        var styles = {\n                transition: '3s ease-in-out',\n                transform: 'translate(-200%)'\n            };\n\n        var spin = [\"iconWrap\", \"\"];\n        \n        let iconElements = this.state.wheelColors.map((value)=>{\n            return <Icons key={uuidv()} className = \"icon\" userName = {value} />\n        });\n\n        return(\n            <div className=\"wheel\">\n                <div className=\"selectionBox\" ></div>\n                <div className={spin.join(\" \")} style={(this.props.spin) ? styles : {}} >\n                    \n                    {iconElements}\n                    {iconElements}\n                    {iconElements}\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default (Wheel);"]},"metadata":{},"sourceType":"module"}